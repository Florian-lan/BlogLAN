{"ast":null,"code":"var _jsxFileName = \"/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/context/authContext.js\",\n  _s = $RefreshSig$();\n// 使用context保存用户信息，\n// 也可以用redux，只是本项目比较简单，不需要这么麻烦\nimport React from 'react';\nimport axios from 'axios';\nimport { createContext, useState, useEffect } from 'react';\n\n// 创建context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// 创建该context的大生产者包含整个app\nexport const AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // 初始化用户信息\n  const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem('user')) || null);\n  const login = async inputs => {\n    const res = await axios.post('http://localhost:8800/api/auth/login', inputs);\n    // TODO 服务端返回的结果包含什么信息\n    console.log(res.json);\n    setCurrentUser(res.data.username);\n  };\n  const logout = async () => {\n    await axios.post('http://localhost:8800/api/auth/logout');\n    setCurrentUser(null);\n  };\n\n  // 使用useEffect依赖currentUser同步更新localStorage中数值\n  useEffect(() => {\n    localStorage.setItem('user', JSON.stringify(currentUser));\n  }, [currentUser]);\n  return (\n    /*#__PURE__*/\n    // 核心部分，共享数据包括currentUser，login, logout\n    _jsxDEV(AuthContext.Provider, {\n      value: {\n        currentUser,\n        login,\n        logout\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(AuthContextProvider, \"JHJZjLeLOYF8pKpCUlXKJA6B4jg=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","axios","createContext","useState","useEffect","AuthContext","AuthContextProvider","children","currentUser","setCurrentUser","JSON","parse","localStorage","getItem","login","inputs","res","post","console","log","json","data","username","logout","setItem","stringify"],"sources":["/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/context/authContext.js"],"sourcesContent":["// 使用context保存用户信息，\n// 也可以用redux，只是本项目比较简单，不需要这么麻烦\nimport React from 'react';\nimport axios from 'axios'\nimport { createContext, useState, useEffect } from 'react';\n\n\n// 创建context\nexport const AuthContext = createContext();\n\n// 创建该context的大生产者包含整个app\nexport const AuthContextProvider = ({children}) =>{\n\n    // 初始化用户信息\n    const [currentUser, setCurrentUser] = useState(\n        JSON.parse(localStorage.getItem('user')) || null\n    );\n\n    const login  = async (inputs) =>{\n        const res = await axios.post('http://localhost:8800/api/auth/login',inputs)\n        // TODO 服务端返回的结果包含什么信息\n        console.log(res.json)\n        setCurrentUser(res.data.username);\n    }\n    const logout = async () =>{\n        await axios.post('http://localhost:8800/api/auth/logout');\n        setCurrentUser(null);\n    }\n\n    // 使用useEffect依赖currentUser同步更新localStorage中数值\n    useEffect(()=>{\n        localStorage.setItem('user',JSON.stringify(currentUser));\n    }, [currentUser])\n\n    return(\n        // 核心部分，共享数据包括currentUser，login, logout\n        <AuthContext.Provider value={{currentUser, login, logout}}>\n            {children}\n        </AuthContext.Provider>\n    );\n\n}\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAG1D;AAAA;AACA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAE;;AAE1C;AACA,OAAO,MAAMI,mBAAmB,GAAG,QAAe;EAAA;EAAA,IAAd;IAACC;EAAQ,CAAC;EAE1C;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAC1CO,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CACnD;EAED,MAAMC,KAAK,GAAI,MAAOC,MAAM,IAAI;IAC5B,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,sCAAsC,EAACF,MAAM,CAAC;IAC3E;IACAG,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;IACrBX,cAAc,CAACO,GAAG,CAACK,IAAI,CAACC,QAAQ,CAAC;EACrC,CAAC;EACD,MAAMC,MAAM,GAAG,YAAW;IACtB,MAAMtB,KAAK,CAACgB,IAAI,CAAC,uCAAuC,CAAC;IACzDR,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACAL,SAAS,CAAC,MAAI;IACVQ,YAAY,CAACY,OAAO,CAAC,MAAM,EAACd,IAAI,CAACe,SAAS,CAACjB,WAAW,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB;IAAA;IACI;IACA,QAAC,WAAW,CAAC,QAAQ;MAAC,KAAK,EAAE;QAACA,WAAW;QAAEM,KAAK;QAAES;MAAM,CAAE;MAAA,UACrDhB;IAAQ;MAAA;MAAA;MAAA;IAAA;EACU;AAG/B,CAAC;AAAA,GA9BYD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}