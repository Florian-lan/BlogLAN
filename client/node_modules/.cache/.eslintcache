[{"/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/index.js":"1","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/App.js":"2","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/context/authContext.js":"3","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/router/AppRouter.js":"4","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/pages/Login/Login.jsx":"5","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/pages/Register/Register.jsx":"6","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/pages/Write/Write.jsx":"7","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/pages/Single/Single.jsx":"8","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/pages/Home/Home.jsx":"9","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/Components/Navbar/Navbar.jsx":"10","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/Components/Footer/Footer.jsx":"11","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/Components/Menu/Menu.jsx":"12"},{"size":372,"mtime":1675286494485,"results":"13","hashOfConfig":"14"},{"size":589,"mtime":1676318652581,"results":"15","hashOfConfig":"14"},{"size":1334,"mtime":1676325567811,"results":"16","hashOfConfig":"14"},{"size":1412,"mtime":1675311661698,"results":"17","hashOfConfig":"14"},{"size":1575,"mtime":1675311168526,"results":"18","hashOfConfig":"14"},{"size":1852,"mtime":1675311129909,"results":"19","hashOfConfig":"14"},{"size":4300,"mtime":1675465355458,"results":"20","hashOfConfig":"14"},{"size":3302,"mtime":1675465777812,"results":"21","hashOfConfig":"14"},{"size":1905,"mtime":1675465777811,"results":"22","hashOfConfig":"14"},{"size":1359,"mtime":1675368823780,"results":"23","hashOfConfig":"14"},{"size":285,"mtime":1672968968625,"results":"24","hashOfConfig":"14"},{"size":1097,"mtime":1675465777812,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o4c712",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},"/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/index.js",[],[],"/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/App.js",["69","70","71","72","73","74","75","76","77","78"],[],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  RouterProvider,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n\n} from \"react-router-dom\";\nimport Login from \"./pages/Login/Login\"\nimport Register from \"./pages/Register/Register\"\nimport Single from \"./pages/Single/Single\"\nimport Write from \"./pages/Write/Write\"\n\nimport AppRouter from \"./router/AppRouter\";\nimport './App.scss'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n      <RouterProvider router={AppRouter}/>\n      </div>\n    </div>\n\n\n  );\n}\n\nexport default App;\n","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/context/authContext.js",[],[],"/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/router/AppRouter.js",["79","80","81","82"],[],"import React from 'react';\nimport {\n    BrowserRouter as Router,\n    createBrowserRouter,\n    Routes,\n    Route,\n    Outlet,\n    Navigate\n} from 'react-router-dom';\nimport Home from '../pages/Home/Home';\nimport Login from '../pages/Login/Login';\nimport Register from '../pages/Register/Register';\nimport Single from '../pages/Single/Single';\nimport Write from '../pages/Write/Write';\nimport Navbar from '../Components/Navbar/Navbar';\nimport Footer from '../Components/Footer/Footer';\n\n\n\n\n\n// 可以实现只在指定的地方使用这个布局（有些页面不需要navbar和footer）\n\nconst Layout = () => {\n    return (\n        <>\n            <Navbar />\n            <Outlet />\n            <Footer />\n        </>\n    )\n}\n\nconst AppRouter = createBrowserRouter(\n    [\n        {\n            path: \"/\",\n            element: <Layout />,\n            children: [\n                {\n                    path: \"/\",\n                    element: <Home />\n                },\n                {\n                    path: \"/post/:id\",\n                    element: < Single />\n                }, \n                {\n                    path: \"/write\",\n                    element: <Write />\n                }\n            ]\n        },\n        {\n            path: \"/login\",\n            element: <Login />\n        }, {\n            path: \"/register\",\n            element: <Register />\n        }\n\n    ]\n)\n\n\n\nexport default AppRouter","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/pages/Login/Login.jsx",["83"],[],"import axios from 'axios'\nimport React from 'react'\nimport {\n  useState,\n  useContext\n} from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\n// import { login } from '../../../../api/controllers/auth'\nimport { AuthContext } from '../../context/authContext.js'\n\n\n\nimport './style.scss'\n\nconst Login = () => {\n  const [inputs, setInputs] = useState({\n    username: '',\n    password: '',\n  })\n  const [err, setError] = useState(null)\n  // 从上下文中取出共享变量\n  const { login } = useContext(AuthContext)\n  // console.log(login)\n  const navigate = useNavigate()\n\n  const handleChange = e => {\n    setInputs(prev => ({ ...prev, [e.target.name]: e.target.value }))\n  }\n  const handleSubmit = async (e) => {\n    // 不取消掉默认事件的话，会刷新页面\n    e.preventDefault();\n    try {\n      // await axios.post('http://localhost:8800/api/auth/login', inputs)\n      await login(inputs);\n      navigate('/');\n    } catch (err) {\n      // console.log(\"it is err from login\",err)\n      setError(err.response.data)\n    }\n\n  }\n  return (\n    <div className='auth'>\n      <h1> Login</h1>\n      <form>\n        <input required type=\"text\" name=\"username\" placeholder='username' onChange={handleChange} />\n        <input required type=\"password\" name=\"password\" placeholder='password' onChange={handleChange} />\n        <button onClick={handleSubmit}>Login</button>\n        {err && <p>{err}</p>}\n        <span> Don't you have an account?\n          <Link to='/register'>Register</Link>\n        </span>\n      </form>\n    </div>\n  )\n}\n\nexport default Login","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/pages/Register/Register.jsx",[],[],"/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/pages/Write/Write.jsx",["84","85"],[],"import React from 'react'\nimport './style.scss';\nimport {\n  useState,\n  useEffect,\n} from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport moment from 'moment';\n\nconst Write = () => {\n  // 从single页面接收到的state\n  const state = useLocation().state;\n  // console.log(state)\n\n  const [value, setValue] = useState(state?.desc || '');\n  const [title, setTitle] = useState(state?.title || '');\n  const [file, setFile] = useState(null);\n  const [cat, setCat] = useState(state?.cat || '');\n  const navigate = useNavigate();\n\n  const upload = async () => {\n    try {\n      const formData = new FormData();\n      // 用户上传图片 - 更新file - 加入formData 用于发送req\n      // console.log(file)\n      formData.append('file', file);\n      // 单独创立一个路由，用于上传数据\n      const res = await axios.post('http://localhost:8800/api/upload', formData);\n      // 返回上传的图片的url\n      return res.data\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  const handlePublish = async (e) => {\n    e.preventDefault();\n    // 提交之前，获取用户上传的图片的url\n    const imgUrl = await upload();\n    console.log(\"posted\")\n\n    try {\n      console.log('state from write', state)\n      state\n        // 存在state说明说明是update\n        ? await axios.put(`http://localhost:8800/api/posts/${state.id}`, {\n          title,\n          desc: value,\n          cat,\n          img: file ? imgUrl : \"\",\n          user: localStorage.getItem(\"user\"),\n        })\n\n      // 发布新的post\n      : await axios.post(`http://localhost:8800/api/posts/`, {\n          title,\n          desc: value,\n          cat,\n          img: file ? imgUrl : \"\",\n          date: moment(Date.now()).format(\"YYYY-MM_DD HH:mm:ss\"),\n          user: localStorage.getItem(\"user\"),\n        })\n      console.log(\"posted\")\n      // navigate('/');\n    } catch (err) {\n      console.log(err);\n\n    }\n  }\n  return (\n    <div className=\"add\">\n      <div className=\"content\">\n        <input type=\"text\" placeholder={state?.title || 'Title'} onChange={e => setTitle(e.target.value)} />\n        <div className=\"editorContainer\">\n          <ReactQuill className=\"editor\" theme=\"snow\" value={value} onChange={setValue} />\n        </div>\n\n      </div>\n      <div className=\"menu\">\n        <div className=\"item i1\">\n          <h1>Publish</h1>\n          <span>\n            <b>Status: </b> Draft\n          </span>\n          <span>\n            <b>Visibility: </b> Public\n          </span>\n          <input style={{ display: 'none' }} type=\"file\" id=\"upload\" onChange={e => setFile(e.target.files[0])} />\n          <label className='upload' htmlFor=\"upload\"> Upload </label>\n          <div className=\"btns\">\n            <button> Save as a draft</button>\n            <button onClick={handlePublish}> Publish </button>\n          </div>\n        </div>\n        <div className=\"item i2\">\n          <h1>Category</h1>\n          <div className=\"cat\">\n            <input type=\"radio\" checked={cat===\"art\"}name=\"cat\" value=\"art\" id=\"art\" onChange={e => setCat(e.target.value)} />\n            <label htmlFor='art'>ART</label>\n          </div>\n\n          <div className=\"cat\">\n            <input type=\"radio\" checked={cat===\"science\"}name=\"cat\" value=\"science\" id=\"science\" onChange={e => setCat(e.target.value)} />\n            <label htmlFor='science'>Science</label>\n          </div>\n\n          <div className=\"cat\">\n            <input type=\"radio\" checked={cat===\"technology\"}name=\"cat\" value=\"technology\" id=\"technology\" onChange={e => setCat(e.target.value)} />\n            <label htmlFor='technology'>Technology</label>\n          </div>\n\n          <div className=\"cat\">\n            <input type=\"radio\" checked={cat===\"design\"}name=\"cat\" value=\"design\" id=\"design\" onChange={e => setCat(e.target.value)} />\n            <label htmlFor='design'>Design</label>\n          </div>\n\n          <div className=\"cat\">\n            <input type=\"radio\" checked={cat===\"food\"}name=\"cat\" value=\"food\" id=\"food\" onChange={e => setCat(e.target.value)} />\n            <label htmlFor='food'>Food</label>\n          </div>\n\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Write","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/pages/Single/Single.jsx",["86","87","88","89"],[],"import React from 'react';\nimport {\n  useState,\n  useEffect,\n  useContext\n} from 'react'\n\nimport {\n  Link,\n  useNavigate,\n  useLocation\n} from 'react-router-dom';\nimport './style.scss';\nimport Menu from '../../Components/Menu/Menu'\nimport {\n  DeleteOutlined,\n  EditOutlined,\n} from '@ant-design/icons'\nimport axios from 'axios';\nimport { AuthContext } from '../../context/authContext.js'\nimport moment from 'moment'\n\n\nconst Single = () => {\n  const IMG = 'https://static.www.tencent.com/uploads/2022/12/28/646a1b54211af41b82eff20a60bdc550.png!article.cover';\n  const navigate = useNavigate();\n  const [post, setPost] = useState({\n    id: 0,\n    username: '',\n    title: '',\n    desc: '',\n    img: '',\n    userImg: '',\n    cat: '',\n    // date初始化TODO\n    date: '1900-01-01T04:00:00.000Z',\n  })\n  const { currentUser } = useContext(AuthContext)\n\n  // 获取需要显示的postid\n  const location = useLocation()\n  // location.pathname is like localhost:3000/post/1\n  const postId = location.pathname.split('/')[2]\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`http://localhost:8800/api/posts/${postId}`)\n        // 根据从数据库中返回的数据设置post信息\n        setPost(res.data)\n        console.log(post)\n        // post信息就是从数据库中返回的信息，/controllers/posts，取决于sql命令SELECT\n\n\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    fetchData()\n    // 别忘了useEffect的依赖项，postID改变时才刷新\n  }, [postId])\n\n\n  const handleEdit = () => {\n    {/* TODO URL 中的问号有什么作用 */ }\n    navigate('/write?edit=2',{state:post});\n  }\n\n  const handleDelete = async ()=>{\n    try{\n      await axios.delete(`http://localhost:8800/api/posts/${postId}`);\n      navigate('/');\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  const getText = (html) =>{\n    const doc = new DOMParser().parseFromString(html,'text/html')\n    return doc.body.textContent\n  }\n  return (\n    <div className=\"single\">\n      <div className=\"content\">\n        {/* <img src=\"../imgs/batman.jpg\" alt=\"\" /> */}\n        <img src={`../upload/${post?.img}`} alt=\"\" />\n        <div className=\"user\">\n          {post.userImg && <img src={post.userImg} alt=\"\" />}\n\n          <div className=\"info\">\n            <span className=\"userName\"> {post.username} </span>\n            {/* {console.log(post.date)} */}\n            <p>Posted {moment(post.date).fromNow()}</p>\n          </div>\n          <div className=\"func\">\n            {console.log(currentUser)}\n            {post.username === currentUser &&\n              (<div className=\"func\">\n                <EditOutlined className='edit' style={{ fontSize: '25px' }} onClick={handleEdit} />\n                <DeleteOutlined className='delete' style={{ fontSize: '25px' }} onClick={handleDelete}/>\n              </div>)\n            }\n\n          </div>\n\n        </div>\n        <div className=\"text\">\n          <h1 className=\"head\">\n            {post.title}\n          </h1>\n          <p className=\"plot\">\n            {getText(post.desc)}\n          </p>\n        </div>\n      </div>\n      <div className=\"menu\">\n      {/* 将cat传递给menu组件进行“推荐” */}\n        <Menu cat={post.cat}/>\n      </div>\n\n    </div>\n  )\n}\n\n\nexport default Single","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/pages/Home/Home.jsx",["90"],[],"import axios from 'axios';\nimport React from 'react';\nimport {\n  useEffect,\n  useState,\n} from 'react'\nimport {\n  Link,\n  useLocation\n} from 'react-router-dom';\nimport dummy from '../../Data/dummyPosts.json';\nimport './style.scss';\n\nconst Home = () => {\n  const [posts, setPosts] = useState([])\n  const location = useLocation()\n  // console.log(location)\n  // location -> {pathname: '/', search: '?cat=art', hash: '', state: null, key: 'qm40o122'}\n\n  const cat = location.search\n\n\n  // const posts = dummy.movies;\n  // 从数据库中获取数据\n  // 使用useEffect获取posts并根据cat进行更新\n  useEffect(() => {\n    // 一般不会在useEffect设置为异步函数，所以单独定义一个异步函数独立出来\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`http://localhost:8800/api/posts${cat}`);\n        setPosts(res.data);\n\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchData()\n  }, [cat]);\n  // 将html解析为文本\n  const getText = (html) =>{\n    const doc = new DOMParser().parseFromString(html,'text/html')\n    return doc.body.textContent\n  }\n  return (\n    <div className=\"home\">\n      <div className=\"posts\">\n        {posts.map((post) => (\n          <div className=\"post\" key={post.id}>\n            <div className=\"img\">\n            {/* TODO post目前在数据库中没有设置添加图片名字等信息 */}\n              <img src={`../upload/${post?.img}`} alt={post.imgName} />\n            </div>\n            <div className=\"content\">\n              <Link to={`/post/${post.id}`} className=\"link\">\n                <h1>{post.title}</h1>\n                <p>{getText(post.desc)}</p>\n                <div className=\"btn\">\n                  <button> Read more</button>\n                </div>\n\n              </Link>\n            </div>\n\n          </div>))\n        }\n      </div>\n\n    </div>\n  )\n}\n\nexport default Home","/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/Components/Navbar/Navbar.jsx",[],[],"/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/Components/Footer/Footer.jsx",[],[],"/Users/florianlan/Desktop/Florian/Project/Blog/BlogLan/client/src/Components/Menu/Menu.jsx",["91"],[],"import axios from 'axios'\nimport React from 'react'\nimport { useState, useEffect } from 'react'\nimport dummy from '../../Data/dummyPosts.json'\nimport './style.scss'\nconst Menu = ({ cat }) => {\n    // const posts = dummy.movies;\n    // console.log(posts)\n    const [posts, setPosts] = useState([])\n    useEffect(() => {\n\n        const fetchData = async () => {\n            try {\n                const res = await axios.get(`http://localhost:8800/api/posts/?cat=${cat}`)\n                setPosts(res.data)\n\n            } catch (err) {\n                console.log(err)\n            }\n        }\n        fetchData();\n    }, [cat])\n\n    return (\n        <div className=\"menu\">\n            {\n                posts.map((post) => (\n                    <div className=\"post\" key={post.id}>\n                        <img src={`../upload/${post?.img}`} alt={post.imgName} />\n                        <h2 className=\"title\">{post.title}</h2>\n                        <button className=\"btn\"> Read More</button>\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Menu;",{"ruleId":"92","severity":1,"message":"93","line":3,"column":20,"nodeType":"94","messageId":"95","endLine":3,"endColumn":26},{"ruleId":"92","severity":1,"message":"96","line":5,"column":3,"nodeType":"94","messageId":"95","endLine":5,"endColumn":9},{"ruleId":"92","severity":1,"message":"97","line":6,"column":3,"nodeType":"94","messageId":"95","endLine":6,"endColumn":8},{"ruleId":"92","severity":1,"message":"98","line":7,"column":3,"nodeType":"94","messageId":"95","endLine":7,"endColumn":7},{"ruleId":"92","severity":1,"message":"99","line":8,"column":3,"nodeType":"94","messageId":"95","endLine":8,"endColumn":16},{"ruleId":"92","severity":1,"message":"100","line":9,"column":3,"nodeType":"94","messageId":"95","endLine":9,"endColumn":12},{"ruleId":"92","severity":1,"message":"101","line":12,"column":8,"nodeType":"94","messageId":"95","endLine":12,"endColumn":13},{"ruleId":"92","severity":1,"message":"102","line":13,"column":8,"nodeType":"94","messageId":"95","endLine":13,"endColumn":16},{"ruleId":"92","severity":1,"message":"103","line":14,"column":8,"nodeType":"94","messageId":"95","endLine":14,"endColumn":14},{"ruleId":"92","severity":1,"message":"104","line":15,"column":8,"nodeType":"94","messageId":"95","endLine":15,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":3,"column":22,"nodeType":"94","messageId":"95","endLine":3,"endColumn":28},{"ruleId":"92","severity":1,"message":"105","line":5,"column":5,"nodeType":"94","messageId":"95","endLine":5,"endColumn":11},{"ruleId":"92","severity":1,"message":"97","line":6,"column":5,"nodeType":"94","messageId":"95","endLine":6,"endColumn":10},{"ruleId":"92","severity":1,"message":"106","line":8,"column":5,"nodeType":"94","messageId":"95","endLine":8,"endColumn":13},{"ruleId":"92","severity":1,"message":"107","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},{"ruleId":"92","severity":1,"message":"108","line":5,"column":3,"nodeType":"94","messageId":"95","endLine":5,"endColumn":12},{"ruleId":"92","severity":1,"message":"109","line":22,"column":9,"nodeType":"94","messageId":"95","endLine":22,"endColumn":17},{"ruleId":"92","severity":1,"message":"98","line":9,"column":3,"nodeType":"94","messageId":"95","endLine":9,"endColumn":7},{"ruleId":"92","severity":1,"message":"110","line":25,"column":9,"nodeType":"94","messageId":"95","endLine":25,"endColumn":12},{"ruleId":"111","severity":1,"message":"112","line":61,"column":6,"nodeType":"113","endLine":61,"endColumn":14,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":65,"column":5,"nodeType":"117","messageId":"118","endLine":65,"endColumn":32},{"ruleId":"92","severity":1,"message":"119","line":11,"column":8,"nodeType":"94","messageId":"95","endLine":11,"endColumn":13},{"ruleId":"92","severity":1,"message":"119","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":13},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'Single' is defined but never used.","'Write' is defined but never used.","'Routes' is defined but never used.","'Navigate' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'navigate' is assigned a value but never used.","'IMG' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'post'. Either include it or remove the dependency array.","ArrayExpression",["120"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'dummy' is defined but never used.",{"desc":"121","fix":"122"},"Update the dependencies array to be: [post, postId]",{"range":"123","text":"124"},[1417,1425],"[post, postId]"]